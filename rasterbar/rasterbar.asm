; (c) J.Viskari 2018 - 2022
; 0 SYS2064

*=$0801
          .byte $0b,$08,$00,$00,$9e,$32,$30,$36,$34,$00,$00,$00
*=$810

          JSR init
infinite_loop
          LDA  #200      
-
          CMP  $D012     
          BNE  -    
          JSR  update_lut          ;update lookup table at line 200

          JMP  infinite_loop


irq_handler
          SEI

          LDX  #$00      

-
          LDA  work_mem,X
          LDY  lut_start,X

-
          DEY
          BNE  -    

          STA  $D020     
          STA  $D021     

          INX  
          CPX  #$41      
          BNE  --    

          ASL  $D019     
          JMP  $EA7E     

;===============================================================================
update_lut
          LDX  #$00      
          LDY  #$FF                    ;value gets modified do not move!
_loop
          LDA  lut2,Y   
          STA  work_mem,X   

          LDA  lut2+2,Y   
          STA  work_mem+$08,X   

          LDA  lut2+4,Y   
          STA  work_mem+$10,X   

          LDA  lut2+6,Y   
          STA  work_mem+$18,X   

          LDA  lut2+8,Y   
          STA  work_mem+$20,X   

          LDA  lut2+10,Y   
          STA  work_mem+$28,X   

          LDA  lut2+12,Y   
          STA  work_mem+$30,X   

          LDA  lut2+14,Y   
          STA  work_mem+$38,X   

          INY
          INX
          CPX  #$8       
          BNE  _loop     
          DEC  _loop-1                    ;self modifying code

          RTS
;===============================================================================

;todo create this at runtime
;*=$C200
.align $100
lut_start
        .rept 9
          .byte $08,$01,$08,$08,$08,$08,$08,$08
        .endrept          
;lut_end

; color map
;*=$C300
.align $100
lut2
          .byte $09,$04,$0A,$0F,$07,$01,$01,$01,$01,$01,$01,$07,$0F,$0A,$04,$09,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $09,$08,$0A,$0F,$07,$01,$01,$01,$01,$01,$01,$07,$0F,$0A,$08,$09,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $06,$04,$0E,$03,$0D,$01,$01,$01,$01,$01,$01,$0D,$03,$0E,$04,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $0B,$0C,$0F,$01,$01,$0F,$0C,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$08,$0A,$0F,$07,$01,$07,$0F,$0A,$08,$00,$00,$00,$00,$00,$00,$00
          .byte $00,$00,$00,$00,$00,$00,$00,$00,$09,$05,$0F,$07,$01,$01,$07,$0F,$05,$09,$00,$00,$00,$00,$00,$00,$09,$0B,$08,$0C,$0F,$07,$01,$01
          .byte $01,$01,$07,$0F,$0C,$08,$0B,$09,$00,$00,$00,$00,$00,$00,$00,$00,$09,$02,$0A,$0F,$07,$01,$07,$0F,$0A,$02,$09,$00,$00,$00,$00,$00
          .byte $06,$0E,$03,$01,$01,$03,$0E,$06,$00,$00,$00,$00,$00,$00,$00,$00,$09,$02,$08,$0A,$0F,$07,$01,$01,$01,$01,$07,$0F,$0A,$08,$02,$09
          .byte $00,$00,$00,$00,$00,$00,$00,$00,$0B,$0C,$0F,$0D,$01,$0D,$0F,$0C,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $09,$04,$0A,$0F,$07,$01,$01,$01,$01,$01,$01,$07,$0F,$0A,$04,$09,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $09,$08,$0A,$0F,$07,$01,$01,$01,$01,$01,$01,$07,$0F,$0A,$08,$09,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $06,$04,$0E,$03,$0D,$01,$01,$01,$01,$01,$01,$0D,$03,$0E,$04,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
          .byte $0B,$0C,$0F,$01,$01,$0F,$0C,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$08,$0A,$0F,$07,$01,$07,$0F,$0A,$08,$00,$00,$00,$00,$00,$00,$00
          .byte $00,$00,$00,$00,$00,$00,$00,$00,$09,$05,$0F,$07,$01,$01,$07,$0F,$05,$09,$00,$00,$00,$00,$00,$00,$09,$0B,$08,$0C,$0F,$07,$01,$01
          .byte $01,$01,$07,$0F,$0C,$08,$0B,$09,$00,$00,$00,$00,$00,$00,$00,$00,$09,$02,$0A,$0F,$07,$01,$07,$0F,$0A,$02,$09,$00,$00,$00,$00,$00
          .byte $06,$0E,$03,$01,$01,$03,$0E,$06,$00,$00,$00,$00,$00,$00,$00,$00,$09,$02,$08,$0A,$0F,$07,$01,$01,$01,$01,$07,$0F,$0A,$08,$02,$09
          .byte $00,$00,$00,$00,$00,$00,$00,$00,$0B,$0C,$0F,$0D,$01,$0D,$0F,$0C,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;lut2_end
.align $100
work_mem
;this is not needed after start
init
          SEI
          LDA  #$01      
          STA  $D01A     
          STA  $DC0D     
          LDA  #$1B      
          STA  $D011     
          STA  $D012     
          LDA  #<irq_handler
          STA  $0314     
          LDA  #>irq_handler
          STA  $0315

          ASL  $D019     
          LDA  #$32                 ;set raster interrupt
          STA  $D012            

          CLI
 
          RTS


;*=work_mem+$1FF
;          .byte $00
;work_mem_end;